{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","redux/actions/todos.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","undefined","tomatoes","store","createStore","rootReducer","history","createBrowserHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","Promise","reject","response","setItem","status","push","window","alert","timeId","updateTodo","TodoInput","props","postTodo","a","post","description","addTodo","data","resource","Error","setState","onKeyUp","e","keyCode","this","suffix","EnterOutlined","onClick","placeholder","value","onChange","target","React","Component","mapDispatchToProps","connect","ownProps","TodoItem","params","completed","completed_at","Date","put","editTodo","exitText","Editing","className","DeleteOutlined","deleted","Text","onDoubleClick","todoItemClass","classNames","checked","Todos","unCompletedTodos","key","filter","unDeletedTodos","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","min","Math","floor","second","confirm","TomatoAction","updateTomato","ended_at","forceUpdate","showConfirm","icon","ExclamationCircleOutlined","onOk","abortTomato","onCancel","cancelText","okText","aborted","unfinishedTomato","html","startTomato","startedAt","parse","started_at","timeNow","getTime","CloseSquareOutlined","TomatoItem","dayjs","format","TomatoList","list","dates","d","finishedTomatoes","length","keys","sort","b","splice","Tomatoes","addTomato","_","groupBy","tomato","TodoHistoryTodoItem","todo","formatText","itemType","created_at","updated_at","TabPane","TodoHistory","finishedTodoList","finishedDates","date","dailyFinishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodos","Statistics","aria-hidden","xlinkHref","menu","Item","SettingOutlined","LoginOutlined","Home","getTodos","get","resources","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","UserOutlined","marginRight","account","Login","newState","submit","password","prefix","Password","to","SignUp","onChangeAccount","onChangePassword","onChangePasswordConfirmation","passwordConfirmation","password_confirmation","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e873e99f.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\nexport  default combineReducers({todos,tomatoes})","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nexport default function (state: any[], action: any) {\r\n  switch (action.type) {\r\n    case ADD_TODO :\r\n      return [...state, action.payload];\r\n    case INIT_TODOS :\r\n      return [...action.payload];\r\n    case UPDATE_TODO :\r\n      return state.map((t: any) => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case EDIT_TODO :\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    default :\r\n      return state === undefined ? [] : state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\n\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case UPDATE_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {createBrowserHistory} from 'history'\nconst history = createBrowserHistory();\n\nexport default history","import axios from 'axios';\nimport history from './history';\n\nconst instance = axios.create({\n  baseURL: 'https://gp-server.hunger-valley.com',\n  headers: {\n    't-app-id': 'fndDfAdKqdjUJpEjtHLErKFk',\n    't-app-secret': 'Bz9Rzzu2uh4HPE7xv8qftLVe'\n  }\n});\n\ninstance.interceptors.request.use(function (config) {\n  const xToken = localStorage.getItem('x-token');\n  if (xToken) {\n    config.headers['Authorization'] = `Bearer ${xToken}`;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\ninstance.interceptors.response.use(function (response) {\n  if (response.headers['x-token']) {\n    localStorage.setItem('x-token', response.headers['x-token']);\n  }\n  return response;\n}, function (error) {\n  if (error.response.status === 401 && error.response !== '') {\n    history.push('/login');\n    // window.location.href = '/login'\n  } else {\n    window.alert('请输入正确的用户名密码，未注册请先注册');\n  }\n});\n\nexport default instance;","import React from 'react';\r\nimport './CountDown.scss'\r\n\r\ninterface ICountDownProps {\r\n  timer: number\r\n  duration: number\r\n  onFinish: ()=> void\r\n}\r\n\r\ninterface ICountDownState {\r\n  countDown: number\r\n}\r\nlet timeId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  get countDown(){\r\n    const min = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor(this.state.countDown / 1000 % 60);\r\n    return `${min}:${second < 10 ? `0${second}` : second}`;\r\n  }\r\n\r\n  componentDidMount() {\r\n     timeId = setInterval(() => {\r\n      const time = this.state.countDown;\r\n       this.setState({countDown: time - 1000});\r\n       document.title = `${this.countDown} - 番茄闹钟`;\r\n       if (time < 1000) {\r\n        document.title = '番茄闹钟';\r\n\r\n        this.props.onFinish();\r\n        clearInterval(timeId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    clearInterval(timeId)\r\n  }\r\n\r\n  render() {\r\n    const percent = 1 - this.state.countDown/this.props.duration;\r\n    return (\r\n      <div className='CountDown'>\r\n        <span className='restTime'>{this.countDown}</span>\r\n        <div className='progress' style={{width: `${percent*100}%`}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;\r\n","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const initTodos = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\nimport {Input} from 'antd';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\n\r\ninterface TodoInputState {\r\n  description: string\r\n}\r\ninterface ITodoInputProps {\r\n  addTodo: (payload:any) => any;\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps,TodoInputState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      let response = await axios.post('todos',{description: this.state.description});\r\n      this.props.addTodo(response.data.resource)\r\n    }catch (e) {\r\n      throw new Error(e)\r\n    }\r\n      this.setState({description: ''});\r\n  };\r\n\r\n  onKeyUp = async (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      await this.postTodo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {description} = this.state;\r\n    const suffix = description ? <EnterOutlined onClick={() => this.postTodo()}/> : <span/>;\r\n    return (\r\n      <div >\r\n        <Input placeholder=\"添加任务\" suffix={suffix} value={description}\r\n               onChange={e => this.setState({description: e.target.value})}\r\n               onKeyUp={this.onKeyUp} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    ...ownProps\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo,updateTodo} from '../../redux/actions/todos';\r\nimport {Checkbox} from 'antd';\r\nimport {DeleteOutlined, EnterOutlined} from '@ant-design/icons';\r\nimport classNames from 'classnames'\r\nimport './TodoItem.scss'\r\nimport axios from '../../config/axios';\r\n\r\ninterface ITodoItem {\r\n  id: number,\r\n  description: string,\r\n  completed: boolean\r\n  editing: boolean,\r\n  editTodo: (id: number) => any;\r\n  updateTodo: (payload: any) => any\r\n}\r\n\r\ninterface ITodoItemState {\r\n  exitText: string\r\n\r\n}\r\n\r\nclass TodoItem extends React.Component<ITodoItem, ITodoItemState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      exitText: this.props.description\r\n    };\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    if(params.completed){\r\n      params.completed_at = new Date()\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      await this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = async (e: any) => {\r\n    if (e.keyCode === 13 && this.state.exitText !== '') {\r\n      await this.updateTodo({description: this.state.exitText});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const Editing = (\r\n      <div className='edit'>\r\n        <input type=\"text\" value={this.state.exitText}\r\n               onChange={e => this.setState({exitText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}/>\r\n        <div className='iconWrapper'>\r\n          <EnterOutlined/>\r\n          <DeleteOutlined onClick={() => {\r\n            return this.updateTodo({deleted: true})\r\n          }}/>\r\n        </div>\r\n      </div>\r\n    );\r\n    const Text = (\r\n      <span className='text' onDoubleClick={this.editTodo}>{this.state.exitText}</span>\r\n    );\r\n    const todoItemClass = classNames({\r\n      TodoItem : true,\r\n      editing : this.props.editing,\r\n      completed : this.props.completed\r\n    });\r\n\r\n    return (\r\n      <div className={todoItemClass} id='todoItem'>\r\n        <Checkbox checked={this.props.completed}\r\n                  onClick={e => this.updateTodo({completed: (e.target as HTMLInputElement).checked})}/>\r\n        {this.props.editing ? Editing : Text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoItem);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../redux/actions/todos';\r\nimport TodoInput from './TodoInput';\r\nimport TodoItem from './TodoItem';\r\nimport './Todos.scss';\r\n\r\n\r\nclass Todos extends React.Component<any> {\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter((t: any) => !t.deleted);\r\n  };\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter((t: any) => !t.completed);\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='Todo'>\r\n        <TodoInput/>\r\n        <main>\r\n          {this.unCompletedTodos.map((t: any) => <TodoItem\r\n            key={t.id} {...t}/>)}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  updateTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n\r\n","import React from 'react';\r\nimport {Button,Modal,Input} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\nimport {CloseSquareOutlined,ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport './TomatoAction.scss';\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => Promise<void>\r\n  updateTomato: (payload: any) => void\r\n  unfinishedTomato: any,\r\n\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string\r\n}\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({description: this.state.description, ended_at: new Date()});\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate();\r\n  };\r\n\r\n   showConfirm = ()=> {\r\n    confirm({\r\n      title: '目前正在一个番茄工作时间中，确定要放弃这个番茄吗？',\r\n      icon: <ExclamationCircleOutlined />,\r\n      onOk: ()=> {\r\n        this.abortTomato()\r\n      },\r\n      onCancel() {},\r\n      cancelText : '取消',\r\n      okText : '确定'\r\n    });\r\n  };\r\n\r\n\r\n  abortTomato = async () => {\r\n    this.updateTomato({aborted: true});\r\n    document.title = '番茄闹钟';\r\n\r\n  };\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`,\r\n        params);\r\n      this.props.updateTomato(response.data.resource);\r\n      this.setState({description: ''});\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\" onClick={() => {this.props.startTomato();}}>开始番茄</Button>;\r\n    } else {\r\n      const startedAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startedAt > duration) {\r\n        html = <div className=\"inputWrapper\">\r\n          <Input value={this.state.description}\r\n                 placeholder=\"请输入你刚刚完成的任务\"\r\n                 onChange={e => this.setState({description: e.target.value})}\r\n                 onKeyUp={e => this.onKeyUp(e)}/>\r\n          <CloseSquareOutlined className='abort' onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startedAt < duration) {\r\n        const timer = duration - timeNow + startedAt;\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown duration={duration} timer={timer} onFinish={this.onFinish}/>\r\n            <CloseSquareOutlined className='abort' onClick={this.showConfirm}/>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className='TomatoAction'>\r\n        {html}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoAction;\r\n","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport './TomatoList.scss'\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props: any) {\r\n  return (\r\n    <div className='TomatoItem'>\r\n      <span className='time'>{dayjs(props.started_at).format('H:mm')} - {dayjs(props.ended_at).format('H:mm')}</span>\r\n      <span className='description'>{props.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component<ITomatoListProps> {\r\n\r\n  get dates() {\r\n    let dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n  }\r\n\r\n  render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d];\r\n      return (\r\n        <div key={d} className='dailyTomatoes'>\r\n          <div className='title'>\r\n            <span className='dateTime'>{dayjs(d).format('M月DD日')}</span>\r\n            <span className='finishedTomatoes'>共{tomatoes.length}个番茄</span>\r\n          </div>\r\n          {\r\n            tomatoes.map((t: any) => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className='TomatoList'>\r\n        {list}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TomatoList;\r\n","import React from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport TomatoList from './TomatoList';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport axios from '../../config/axios';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface ITomatoProps {\r\n  addTomato: (payload: any) => any\r\n  updateTomato: (payload: any) => any\r\n  tomatoes: any[]\r\n}\r\n\r\nclass Tomatoes extends React.Component<ITomatoProps> {\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0];\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    return _.groupBy(finishedTomatoes, (tomato) => {\r\n      return dayjs(tomato.started_at).format('YYYY-MM-DD');\r\n    });\r\n  }\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 1500000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='Tomatoes'>\r\n        <TomatoAction startTomato={this.startTomato}\r\n                      unfinishedTomato={this.unfinishedTomato && this.unfinishedTomato}\r\n                      updateTomato={this.props.updateTomato}/>\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    tomatoes: state.tomatoes,\r\n    ...ownProps\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);\r\n","import {INIT_TOMATOES, ADD_TOMATO, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};","import React from 'react';\nimport dayjs from 'dayjs';\nimport {connect} from 'react-redux';\nimport './TodoHistoryTodoItem.scss';\nimport {updateTodo} from '../../../redux/actions/todos';\nimport axios from '../../../config/axios';\n\ninterface ITodoHistoryTodoItemProps {\n  todo: any\n  itemType: string\n  updateTodo: (payload: any) => void\n}\n\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\n\n  updateTodo = async ( params: any) => {\n    try {\n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\n      this.props.updateTodo(response.data.resource);\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  render() {\n    let action, formatText, time;\n    if (this.props.itemType === 'finished') {\n      formatText = 'HH:mm';\n      time = this.props.todo.created_at;\n      action = (\n        <div className='action'>\n          <span onClick={()=>this.updateTodo({completed: false})}>恢复</span>\n          <span onClick={()=>this.updateTodo({deleted: true})}>删除</span>\n        </div>\n      );\n    } else if (this.props.itemType === 'deleted') {\n      formatText = 'YYYY-MM-DD';\n      time = this.props.todo.updated_at;\n      action = (\n        <div className='action'>\n          <span  onClick={()=>this.updateTodo({deleted: false})}>恢复</span>\n        </div>\n      );\n    }\n    return (\n      <div className='TodoHistoryTodoItem'>\n        <div className={'text'}>\n          <span className='time'>{dayjs(time).format(formatText)}</span>\n          <span className='description'>{this.props.todo.description}</span>\n        </div>\n        {action}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  return {\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = {\n  updateTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport {Tabs} from 'antd';\r\nimport './TodoHistory.scss';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem'\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-DD');\r\n    });\r\n  }\r\n\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos);\r\n  }\r\n\r\n\r\n  render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className='dailyTodos'>\r\n          <div className='summary'>\r\n            <p className='date'>\r\n              <span>{date}</span>\r\n              <span>周几</span>\r\n            </p>\r\n            <p>完成{this.dailyFinishedTodos[date].length}个任务</p>\r\n          </div>\r\n          <div className='todoList'>\r\n            {this.dailyFinishedTodos[date].map(todo => <TodoHistoryTodoItem itemType='finished' key={todo.id} todo={todo}/>)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const deletedTodoList = this.deletedTodos.map(todo => {\r\n      return (\r\n            <TodoHistoryTodoItem key={todo.id} todo={todo} itemType='deleted'/>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"已完成的任务\" key=\"1\">\r\n            <div className='TodoHistory'>\r\n              {finishedTodoList}\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab=\"已删除的任务\" key=\"2\">\r\n            <div className='TodoHistory'>\r\n              {deletedTodoList}\r\n            </div>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);\r\n","import React from 'react';\r\nimport './Statistics.scss';\r\nimport {connect} from 'react-redux';\r\n// import Polygon from './Polygon';\r\nimport _ from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport TodoHistory from './TodoHistory/TodoHistory';\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[]\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps> {\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter((t: any) => t.completed && !t.deleted);\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-DD');\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id='Statistics'>\r\n        <ul>\r\n          {/*<li>番茄历史</li>*/}\r\n          <li>\r\n            <span>\r\n              <svg className=\"icon\" aria-hidden=\"true\">\r\n                <use xlinkHref='#i-history'></use>\r\n              </svg>\r\n              任务历史</span> <br/>\r\n            {/*<span >{this.finishedTodos.length}个任务</span>*/}\r\n            {/*<Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length}/>*/}\r\n          </li>\r\n        </ul>\r\n        <TodoHistory/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","import * as React from 'react';\r\nimport {Dropdown, Menu} from 'antd';\r\nimport {SettingOutlined, LoginOutlined, UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport history from '../../config/history';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\nimport Todos from '../Todos/Todos';\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport './Home.scss';\r\n\r\nconst LoginOut = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('/login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item>\r\n      <span onClick={() => window.alert('还未设计个人设置页面，以后会继续完善')}><SettingOutlined/>个人设置</span>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <span onClick={LoginOut}><LoginOutlined/>注销</span>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\n\r\nclass Home extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  async UNSAFE_componentWillMount() {\r\n    await this.getMe();\r\n    this.getTodos();\r\n    this.getTomatoes();\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map((t: any) => Object.assign({}, t, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    if (response) {\r\n      this.setState({user: response.data});\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='Home'>\r\n        <header>\r\n          <span className=\"logo\">\r\n              <svg className=\"icon\" aria-hidden=\"true\">\r\n                <use xlinkHref='#i-tomato'></use>\r\n              </svg>\r\n            番茄闹钟\r\n          </span>\r\n          <Dropdown overlay={menu}>\r\n            <span><UserOutlined style={{marginRight: '10px'}}/>{this.state.user.account}</span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomatoes/>\r\n          <Todos/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport {Button, Input} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './Login.scss';\r\n\r\ninterface LoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, LoginState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (key: keyof LoginState, value: string) => {\r\n    const newState = {} as any;\r\n    newState[key] = value  ;\r\n    this.setState(newState);\r\n  };\r\n\r\n  submit = async () => {\r\n    const {account, password} = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password,\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className='Login'>\r\n        <h1>登录番茄</h1>\r\n        <Input placeholder=\"请输入用户名\" prefix={<UserOutlined/>}\r\n               value={account} onChange={e => this.onChange('account', e.target.value)}/>\r\n        <Input.Password placeholder=\"请输入密码\" value={password}\r\n                        onChange={e => this.onChange('password', e.target.value)}/>\r\n        <Button className='button' onClick={this.submit}>登录</Button>\r\n        <p>如果未注册用户,请立即<Link to={`/signUp`}>注册</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Button, Input} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios'\r\nimport { Link } from 'react-router-dom';\r\nimport './SignUp.scss'\r\n\r\ninterface SignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConfirmation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, SignUpState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    };\r\n  }\r\n\r\n  onChangeAccount = (e: any) => {\r\n    this.setState({account: e.target.value});\r\n  };\r\n\r\n  onChangePassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n  onChangePasswordConfirmation = (e: any) => {\r\n    this.setState({passwordConfirmation: e.target.value});\r\n  };\r\n  submit = async () => {\r\n    const {account, password, passwordConfirmation} = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account,\r\n        password,\r\n        password_confirmation: passwordConfirmation\r\n      });\r\n      this.props.history.push('/')\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {account, password, passwordConfirmation} = this.state;\r\n    return (\r\n      <div className='SignUp'>\r\n        <h1>注册番茄</h1>\r\n        <Input placeholder=\"请输入用户名\" prefix={<UserOutlined/>}\r\n               value={account} onChange={this.onChangeAccount}/>\r\n        <Input.Password placeholder=\"请输入密码\" value={password}\r\n                        onChange={this.onChangePassword}/>\r\n        <Input.Password placeholder=\"确认密码\" value={passwordConfirmation}\r\n                        onChange={this.onChangePasswordConfirmation}/>\r\n        <Button className='button' onClick={this.submit}>注册</Button>\r\n        <p>如果已注册用户,请立即<Link to={`/login`} >登录</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\nimport {Route,  Router} from 'react-router-dom';\nimport './App.scss';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport history from './config/history';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Route exact={true} path=\"/\" component={Home}/>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/signUp\" component={SignUp}/>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}